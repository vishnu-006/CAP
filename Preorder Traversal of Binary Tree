/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> preorderTraversal(TreeNode root) {
        
        ArrayList<Integer> arr = new ArrayList<>();
        Stack<TreeNode> stack = new Stack<>();
        TreeNode curr  = root;
        stack.add(curr);
        if(root==null){
            return arr;
        }
        while(stack.isEmpty()==false){
            curr = stack.pop();
            arr.add(curr.val);
            if(curr.right!=null){
                stack.add(curr.right);
            }
            if(curr.left!=null){
                stack.add(curr.left);
            }
        }

        return arr;
    }
}
