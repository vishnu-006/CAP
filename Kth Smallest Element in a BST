/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int kthSmallest(TreeNode root, int k) {
        Queue<TreeNode> line = new LinkedList<>();
        ArrayList<Integer> arr = new ArrayList<>();
        line.add(root);
        TreeNode curr = root;
        while(!line.isEmpty()){
            int size = line.size();
            for(int i=0;i<size;i++){
                curr = line.poll();
                arr.add(curr.val);
                if(curr.left!=null) line.add(curr.left);
                if(curr.right!=null) line.add(curr.right); 
            }
        }
        Collections.sort(arr);
        //System.out.println(arr);
        int res = arr.get(k-1);
        return res;
    }
}
