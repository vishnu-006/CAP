/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean hasPathSum(TreeNode root, int targetSum) {
        if(root==null)
            return false;
        Deque<TreeNode>d=new ArrayDeque<>();
        d.offer(root);
        while(!d.isEmpty())
        {
            
            TreeNode curr=d.pollLast();
            if(curr.left==null&&curr.right==null)
            {
                if(curr.val==targetSum)
                    return true;

            }
            if(curr.right!=null)
            {
                curr.right.val=curr.right.val+curr.val;
                d.offer(curr.right);
            }
            if(curr.left!=null)
            {
                
                curr.left.val=curr.left.val+curr.val;
                d.offer(curr.left);
            }
        }
        return false;
    }
    
}
