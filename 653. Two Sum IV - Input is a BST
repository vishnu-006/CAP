/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    
    public boolean findTarget(TreeNode root, int k) {
        Queue<TreeNode> queue = new LinkedList<>();
        queue.add(root);
        HashSet<Integer> set = new HashSet<>();
        while(!queue.isEmpty()){
            int size = queue.size();
            for(int i=0;i<size;i++){
                root = queue.poll();
                //if(root.val == k) return true;
                if(set.contains(k-root.val)){
                    return true;
                }
                set.add(root.val);
                if(root.left!=null) queue.add(root.left);
                if(root.right!=null) queue.add(root.right);
            }

        }
        return false;
        
    
        
    }
}
