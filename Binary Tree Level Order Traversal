/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        if(root == null ){
            return new ArrayList<>();
        }
        List<List<Integer>> list = new ArrayList<>();
        Queue<TreeNode> line = new LinkedList<>();
        line.add(root);
        while(!line.isEmpty()){
            List<Integer> arr = new ArrayList<>();
            int size = line.size();
             for(int i=1;i<=size;i++){
            TreeNode curr = line.poll();
            
            arr.add(curr.val);
            if(curr.left!=null){
                line.add(curr.left);
            }
            if(curr.right!=null){
                line.add(curr.right);
            }
           
        }
        list.add(arr);
        
    }
    return list;
}
}
